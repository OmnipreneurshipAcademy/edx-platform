version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.5-node
        auth:
          username: jw3759142
          password: $DOCKERHUB_PASSWORD
      - image: circleci/mongo:4.1.12-bionic
        auth:
          username: jw3759142
          password: $DOCKERHUB_PASSWORD
    parallelism: 1

    steps:
      - checkout
      - restore_cache:
          key: abc13-{{ checksum "requirements/edx/testing.txt" }}-{{ checksum "requirements/adg/base.txt"
            }}-{{ checksum "requirements/edx/coverage.txt" }}-{{ checksum "package.json" }}
      - run:
          name: Download requirements
          no_output_timeout: 25m
          command: |
            wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse" \
            | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
            sudo apt-get update
            sudo apt-get install -y mongodb-org-shell=4.4.1 jq

            pip install --exists-action w -r requirements/edx/testing.txt
            pip install --exists-action w -r requirements/adg/base.txt
      - run:
          name: Run all tests
          command: |
            TEST_SCRIPT=adg_pipelines/scripts/circle-ci-tests.sh
            chmod +x ${TEST_SCRIPT} && source ${TEST_SCRIPT}
      - run:
          name: Find coverage
          command: |
            BASE_BRANCH=$(curl https://api.github.com/repos/OmnipreneurshipAcademy/edx-platform/pulls/14 | jq -r ".base.ref")
            paver coverage -b origin/${BASE_BRANCH} -c adg_pipelines/.coveragerc-adg
      - save_cache:
          key: abc13-{{ checksum "requirements/edx/testing.txt" }}-{{ checksum "requirements/adg/base.txt"
            }}-{{ checksum "requirements/edx/coverage.txt" }}-{{ checksum "package.json" }}
          paths:
            - "/home/circleci/.pyenv/versions/3.5.10/bin/"
            - "/home/circleci/.pyenv/versions/3.5.10/lib/"
            - "/home/circleci/.cache/pip"
            - "/home/circleci/project/node_modules"
      - run:
          name: Upload report to Codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -f reports/coverage.xml
      - store_artifacts:
          path: reports
      - store_artifacts:
          path: test_root/log
      - store_test_results:
          path: reports

workflows:
  main:
    jobs:
      - build-and-test:
          context:
            - adg-context
          post-steps: # steps to run after steps defined in the job bar
            - run:
                command: |
                  echo "All jobs complete, do your clean up here"
